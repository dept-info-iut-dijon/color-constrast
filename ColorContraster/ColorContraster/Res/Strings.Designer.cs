//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ColorContraster.Res {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ColorContraster.Res.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alexandre Guidet.
        /// </summary>
        public static string Author {
            get {
                return ResourceManager.GetString("Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Background color.
        /// </summary>
        public static string BackName {
            get {
                return ResourceManager.GetString("BackName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Blue.
        /// </summary>
        public static string Blue {
            get {
                return ResourceManager.GetString("Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The purpose of the application is to calculate the contrast ratio between a foreground color and a background color, so that it can meet WCAG accessibility recommendations.
        ///Different possibilities are offered to choose the color (input of RGB components, HTML code, choice in a palette, &quot;pipette&quot; on the screen ...), the calculation of the ratio is automatic. Sample text using the chosen colors is provided. Icons directly indicate whether WCAG recommendations are met or not..
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à https://github.com/egorozh/Egorozh.ColorPicker.
        /// </summary>
        public static string EgorozhURL {
            get {
                return ResourceManager.GetString("EgorozhURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Foreground color.
        /// </summary>
        public static string ForeName {
            get {
                return ResourceManager.GetString("ForeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Green.
        /// </summary>
        public static string Green {
            get {
                return ResourceManager.GetString("Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Large-size text.
        /// </summary>
        public static string LargeText {
            get {
                return ResourceManager.GetString("LargeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à https://github.com/dept-info-iut-dijon/color-constrast/.
        /// </summary>
        public static string MyGitURL {
            get {
                return ResourceManager.GetString("MyGitURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose a color.
        /// </summary>
        public static string PickerTitle {
            get {
                return ResourceManager.GetString("PickerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        public static string ProposTitle {
            get {
                return ResourceManager.GetString("ProposTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Contrast ratio.
        /// </summary>
        public static string Ratio {
            get {
                return ResourceManager.GetString("Ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Red.
        /// </summary>
        public static string Red {
            get {
                return ResourceManager.GetString("Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sample text.
        /// </summary>
        public static string SampleText {
            get {
                return ResourceManager.GetString("SampleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Normal-size text.
        /// </summary>
        public static string SmallText {
            get {
                return ResourceManager.GetString("SmallText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Color contrast analyzer.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use the ColorPicker component by Egorozh.
        /// </summary>
        public static string UsePicker {
            get {
                return ResourceManager.GetString("UsePicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version {0} - {1}.
        /// </summary>
        public static string VersionNumber {
            get {
                return ResourceManager.GetString("VersionNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WCAG rules.
        /// </summary>
        public static string WCAG {
            get {
                return ResourceManager.GetString("WCAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose a color.
        /// </summary>
        public static string WheelTip {
            get {
                return ResourceManager.GetString("WheelTip", resourceCulture);
            }
        }
    }
}
